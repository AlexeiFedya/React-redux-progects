{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-box\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStore, bindActionCreators } from 'redux';\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport { Provider } from 'react-redux'; // import {dec , inc, rnd} from './actions'\n\nconst store = createStore(reducer);\nconst {\n  dispatch,\n  getState\n} = store; // const bindActionCreator = (creator, dispatch) => (...args) => {\n//   dispatch(creator(...args))\n// }\n// const decDispath = bindActionCreators (dec, dispatch)\n// const incDispath = bindActionCreators (inc, dispatch)\n// const rndDispath = bindActionCreators (rnd, dispatch)\n\nconst {\n  dec,\n  inc,\n  rnd\n} = bindActionCreators(actions, dispatch);\n\nconst update = () => {};\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, getState()), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: dec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" DECK \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: inc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"INC\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => {\n      const value = Math.floor(Math.random() * 10);\n      rnd(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"RND\"));\n};\n\nApp();\nstore.subscribe(App);\nexport default App;","map":{"version":3,"sources":["F:/React-redux-progects/redux-box/src/App.js"],"names":["React","createStore","bindActionCreators","reducer","actions","Provider","store","dispatch","getState","dec","inc","rnd","update","App","value","Math","floor","random","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CACA;;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAACE,OAAD,CAAzB;AACA,MAAM;AAAEI,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBF,KAA9B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAM;AAAEG,EAAAA,GAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,IAAqBT,kBAAkB,CAAEE,OAAF,EAAWG,QAAX,CAA7C;;AAEA,MAAMK,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAEhB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,QAAQ,EAAb,CAFA,eAIE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAEC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAEC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eAYE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAd;AACAN,MAAAA,GAAG,CAACG,KAAD,CAAH;AAAY,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADF;AAoBD,CAtBD;;AAwBAD,GAAG;AACHP,KAAK,CAACY,SAAN,CAAgBL,GAAhB;AAEA,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { createStore, bindActionCreators } from 'redux';\nimport reducer from './reducer'\nimport * as actions from './actions'\nimport {Provider} from 'react-redux'\n// import {dec , inc, rnd} from './actions'\n\nconst store = createStore(reducer)\nconst { dispatch, getState} = store\n\n// const bindActionCreator = (creator, dispatch) => (...args) => {\n//   dispatch(creator(...args))\n// }\n\n// const decDispath = bindActionCreators (dec, dispatch)\n// const incDispath = bindActionCreators (inc, dispatch)\n// const rndDispath = bindActionCreators (rnd, dispatch)\n\nconst { dec , inc, rnd } = bindActionCreators (actions, dispatch)\n\nconst update = () => {\n\n}\n\n\n\nconst App = () => {\n  \n  return (\n    <div className='jumbotron'>\n\n    <h2>{getState()}</h2>\n\n      <button\n        className='btn btn-primary btn-lg'\n        onClick={dec} > DECK </button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={inc}>INC</button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={() => {\n          const value = Math.floor(Math.random() * 10)\n          rnd(value) }}>RND</button>\n    </div>\n  );\n}\n\nApp()\nstore.subscribe(App)\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}