{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-box\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStore, bindActionCreators } from 'redux';\nimport reducer from './reducer';\nimport * as actions from './actions'; // import {dec , inc, rnd} from './actions'\n\nconst store = createStore(reducer);\nconst {\n  dispatch,\n  getState\n} = store; // const bindActionCreator = (creator, dispatch) => (...args) => {\n//   dispatch(creator(...args))\n// }\n// const decDispath = bindActionCreators (dec, dispatch)\n// const incDispath = bindActionCreators (inc, dispatch)\n// const rndDispath = bindActionCreators (rnd, dispatch)\n\nconst {\n  dec,\n  inc,\n  rnd\n} = bindActionCreators(actions, dispatch);\n\nconst update = () => {};\n\nstore.subscribe(update);\nconst value = Math.floor(Math.random() * 10);\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, getState()), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => dec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" DECK \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => inc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"INC\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => rnd(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"RND\"));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/React-redux-progects/redux-box/src/App.js"],"names":["React","createStore","bindActionCreators","reducer","actions","store","dispatch","getState","dec","inc","rnd","update","subscribe","value","Math","floor","random","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB,C,CACA;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAACE,OAAD,CAAzB;AACA,MAAM;AAAEG,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBF,KAA9B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAM;AAAEG,EAAAA,GAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,IAAqBR,kBAAkB,CAAEE,OAAF,EAAWE,QAAX,CAA7C;;AAEA,MAAMK,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAIAN,KAAK,CAACO,SAAN,CAAgBD,MAAhB;AAEA,MAAME,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAd;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,QAAQ,EAAb,CAFA,eAIE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,GAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,GAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eAYE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MACPC,GAAG,CAACG,KAAD,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADF;AAmBD,CArBD;;AAuBA,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport { createStore, bindActionCreators } from 'redux';\nimport reducer from './reducer'\nimport * as actions from './actions'\n// import {dec , inc, rnd} from './actions'\n\nconst store = createStore(reducer)\nconst { dispatch, getState} = store\n\n// const bindActionCreator = (creator, dispatch) => (...args) => {\n//   dispatch(creator(...args))\n// }\n\n// const decDispath = bindActionCreators (dec, dispatch)\n// const incDispath = bindActionCreators (inc, dispatch)\n// const rndDispath = bindActionCreators (rnd, dispatch)\n\nconst { dec , inc, rnd } = bindActionCreators (actions, dispatch)\n\nconst update = () => {\n\n}\n\nstore.subscribe(update)\n\nconst value = Math.floor(Math.random() * 10)\n\nconst App = () => {\n  \n  return (\n    <div className='jumbotron'>\n\n    <h2>{getState()}</h2>\n\n      <button\n        className='btn btn-primary btn-lg'\n        onClick={()=> dec} > DECK </button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> inc}>INC</button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> \n          rnd(value)}>RND</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}