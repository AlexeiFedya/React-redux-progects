{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-box\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStore } from 'redux';\n\nreducer = (state = 0, action) => {\n  // if (action.type === 'INC') {\n  //   return state + 1;\n  // }\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n\n    case 'DECK':\n      return state - 1;\n\n    default:\n      // если не распознали наше действие то по дефолту возвращаем state \n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst update = () => {\n  return store.getState();\n};\n\nstore.subscribe(update);\n\nfunction App() {\n  reducer = (state = 0, action) => {\n    // if (action.type === 'INC') {\n    //   return state + 1;\n    // }\n    switch (action.type) {\n      case 'INC':\n        return state + 1;\n\n      case 'DECK':\n        return state - 1;\n\n      default:\n        // если не распознали наше действие то по дефолту возвращаем state \n        return state;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, update), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => store.dispatch({\n      type: 'DECK'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \" DECK \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => store.dispatch({\n      type: 'INC'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"INC\"));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/React-redux-progects/redux-box/src/App.js"],"names":["React","createStore","reducer","state","action","type","store","update","getState","subscribe","App","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEAC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAE/B;AACA;AACA;AAGA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,MAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AAEA;AAAS;AACP,aAAOA,KAAP;AAPN;AAUD,CAjBD;;AAmBA,MAAMG,KAAK,GAAGL,WAAW,CAACC,OAAD,CAAzB;;AACA,MAAMK,MAAM,GAAG,MAAM;AACnB,SACED,KAAK,CAACE,QAAN,EADF;AAGD,CAJD;;AAOAF,KAAK,CAACG,SAAN,CAAgBF,MAAhB;;AAEA,SAASG,GAAT,GAAe;AACbR,EAAAA,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAE/B;AACA;AACA;AAGA,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAOF,KAAK,GAAG,CAAf;;AACF,WAAK,MAAL;AACE,eAAOA,KAAK,GAAG,CAAf;;AAEA;AAAS;AACP,eAAOA,KAAP;AAPN;AAUD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAL,CADF,eAGE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKD,KAAK,CAACK,QAAN,CAAe;AAACN,MAAAA,IAAI,EAAC;AAAN,KAAf,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,KAAK,CAACK,QAAN,CAAe;AAACN,MAAAA,IAAI,EAAC;AAAN,KAAf,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF;AAaD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport { createStore } from 'redux';\n\nreducer = (state = 0, action) => {\n\n  // if (action.type === 'INC') {\n  //   return state + 1;\n  // }\n\n\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n    case 'DECK':\n      return state - 1;\n\n      default: // если не распознали наше действие то по дефолту возвращаем state \n        return state;\n  }\n\n}\n\nconst store = createStore(reducer)\nconst update = () => {\n  return (\n    store.getState()\n  )\n}\n  \n\nstore.subscribe(update)\n\nfunction App() {\n  reducer = (state = 0, action) => {\n\n    // if (action.type === 'INC') {\n    //   return state + 1;\n    // }\n  \n  \n    switch (action.type) {\n      case 'INC':\n        return state + 1;\n      case 'DECK':\n        return state - 1;\n  \n        default: // если не распознали наше действие то по дефолту возвращаем state \n          return state;\n    }\n  \n  }\n  \n  return (\n    <div className='jumbotron'>\n      <h2>{update}</h2>\n\n      <button\n        className='btn btn-primary btn-lg'\n        onClick={()=> store.dispatch({type:'DECK'})} > DECK </button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> store.dispatch({type:'INC'})}>INC</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}