{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-box\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStore } from 'redux';\nimport reducer from './reducer';\nimport { dec, inc, rnd } from './actions';\nconst store = createStore(reducer);\nconst {\n  dispatch,\n  getState\n} = store;\n\nconst bindActionCreator = (creator, dispatch) => (...args) => {\n  dispatch(creator(...args));\n};\n\nconst decDispath = bindActionCreator(dec, dispatch);\nconst incDispath = bindActionCreator(inc, dispatch);\nconst rndDispath = bindActionCreator();\n\nconst update = () => {\n  return store.getState();\n};\n\nstore.subscribe(update);\nconst value = Math.floor(Math.random() * 10);\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, getState()), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => decDispath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" DECK \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => incDispath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"INC\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => rndDispath(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"RND\"));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/React-redux-progects/redux-box/src/App.js"],"names":["React","createStore","reducer","dec","inc","rnd","store","dispatch","getState","bindActionCreator","creator","args","decDispath","incDispath","rndDispath","update","subscribe","value","Math","floor","random","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,GAAR,EAAcC,GAAd,EAAmBC,GAAnB,QAA6B,WAA7B;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAACC,OAAD,CAAzB;AACA,MAAM;AAAEK,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBF,KAA9B;;AAEA,MAAMG,iBAAiB,GAAG,CAACC,OAAD,EAAUH,QAAV,KAAuB,CAAC,GAAGI,IAAJ,KAAa;AAC5DJ,EAAAA,QAAQ,CAACG,OAAO,CAAC,GAAGC,IAAJ,CAAR,CAAR;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAGH,iBAAiB,CAAEN,GAAF,EAAOI,QAAP,CAApC;AACA,MAAMM,UAAU,GAAGJ,iBAAiB,CAAEL,GAAF,EAAOG,QAAP,CAApC;AACA,MAAMO,UAAU,GAAGL,iBAAiB,EAApC;;AAEA,MAAMM,MAAM,GAAG,MAAM;AACrB,SACET,KAAK,CAACE,QAAN,EADF;AAGC,CAJD;;AAMAF,KAAK,CAACU,SAAN,CAAgBD,MAAhB;AAEA,MAAME,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAd;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,QAAQ,EAAb,CAFA,eAIE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKI,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eAYE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MACPC,UAAU,CAACG,KAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADF;AAmBD,CArBD;;AAuBA,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport { createStore } from 'redux';\nimport reducer from './reducer'\nimport {dec , inc, rnd} from './actions'\n\nconst store = createStore(reducer)\nconst { dispatch, getState} = store\n\nconst bindActionCreator = (creator, dispatch) => (...args) => {\n  dispatch(creator(...args))\n}\n\nconst decDispath = bindActionCreator (dec, dispatch)\nconst incDispath = bindActionCreator (inc, dispatch)\nconst rndDispath = bindActionCreator ()\n\nconst update = () => {\nreturn (\n  store.getState()\n)\n}\n\nstore.subscribe(update)\n\nconst value = Math.floor(Math.random() * 10)\n\nconst App = () => {\n  \n  return (\n    <div className='jumbotron'>\n\n    <h2>{getState()}</h2>\n\n      <button\n        className='btn btn-primary btn-lg'\n        onClick={()=> decDispath} > DECK </button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> incDispath}>INC</button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> \n          rndDispath(value)}>RND</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}