{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-box\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStore } from 'redux';\n\nconst reducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n\n    case 'DECK':\n      return state - 1;\n\n    default:\n      // если не распознали наше действие то по дефолту возвращаем state \n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst update = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \" \", store.getState), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => store.dispatch({\n      type: 'DECK'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \" DECK \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-lg\",\n    onClick: () => store.dispatch({\n      type: 'INC'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"INC\"));\n};\n\nstore.subscribe(update);\nexport default App;","map":{"version":3,"sources":["F:/React-redux-progects/redux-box/src/App.js"],"names":["React","createStore","reducer","state","action","type","store","update","getState","dispatch","subscribe","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAErC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,MAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AAEA;AAAS;AACP,aAAOA,KAAP;AAPN;AASD,CAXD;;AAaA,MAAMG,KAAK,GAAGL,WAAW,CAACC,OAAD,CAAzB;;AAEA,MAAMK,MAAM,GAAG,MAAM;AACrB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMD,KAAK,CAACE,QAAZ,CAFJ,eAII;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKF,KAAK,CAACG,QAAN,CAAe;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAf,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE,MAAKC,KAAK,CAACG,QAAN,CAAe;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAf,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,CADF;AAcC,CAfD;;AAiBAC,KAAK,CAACI,SAAN,CAAgBH,MAAhB;AAGA,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport { createStore } from 'redux';\n\nconst reducer = (state = 0, action) => {\n\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n    case 'DECK':\n      return state - 1;\n\n      default: // если не распознали наше действие то по дефолту возвращаем state \n        return state;\n  }\n}\n\nconst store = createStore(reducer)\n\nconst update = () => {\nreturn (\n  <div className='jumbotron'>\n\n      <h2> {store.getState}</h2>\n\n      <button\n        className='btn btn-primary btn-lg'\n        onClick={()=> store.dispatch({type:'DECK'})} > DECK </button>\n\n      <button \n        className='btn btn-primary btn-lg'\n        onClick={()=> store.dispatch({type:'INC'})}>INC</button>\n    </div>\n)\n}\n\nstore.subscribe(update)\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}