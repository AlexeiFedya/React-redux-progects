{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\item-list\\\\item-list.js\";\nimport React from 'react';\nimport './item-list.css';\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator/error-indicator';\nexport default class ItemList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      peopleList: [],\n      loading: true,\n      error: false\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.swapiService.getAllPeople().then(peopleList => {\n      this.setState({\n        peopleList,\n        loading: false\n      });\n    });\n  }\n\n  renderItems(arr) {\n    return arr.map(({\n      id,\n      name\n    }) => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: id,\n        onClick: () => this.props.onItemSelected(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, name);\n    });\n  }\n\n  render() {\n    const {\n      peopleList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(peopleList);\n    const errorMesage = error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : null;\n    const spinner = loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : null;\n    const content = !(loading || error) ? items : null;\n    return React.createElement(\"ul\", {\n      className: \"item-list list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, errorMesage, spinner, content);\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/item-list/item-list.js"],"names":["React","SwapiService","Spinner","ErrorIndicator","ItemList","Component","swapiService","state","peopleList","loading","error","onError","err","setState","componentDidMount","getAllPeople","then","renderItems","arr","map","id","name","props","onItemSelected","render","items","errorMesage","spinner","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAElDC,YAFkD,GAEnC,IAAIL,YAAJ,EAFmC;AAAA,SAIlDM,KAJkD,GAI1C;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAJ0C;;AAAA,SAqBlDC,OArBkD,GAqBvCC,GAAD,IAAS;AACf,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,IADG;AAEVD,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KA1BiD;AAAA;;AAUlDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,YAAL,CACKS,YADL,GAEKC,IAFL,CAEWR,UAAD,IAAc;AAChB,WAAKK,QAAL,CAAc;AACVL,QAAAA,UADU;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAPL;AAQH;;AASDQ,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,WAAOA,GAAG,CAACC,GAAJ,CAAQ,CAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAD,KAAgB;AAC3B,aACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AACI,QAAA,GAAG,EAAED,EADT;AAEI,QAAA,OAAO,EAAE,MAAI,KAAKE,KAAL,CAAWC,cAAX,CAA0BH,EAA1B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKC,IAHL,CADJ;AAOH,KARM,CAAP;AASH;;AAEHG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAChB,MAAAA,UAAD;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,QAA+B,KAAKH,KAA1C;AACA,UAAMkB,KAAK,GAAG,KAAKR,WAAL,CAAiBT,UAAjB,CAAd;AAGA,UAAMkB,WAAW,GAAGhB,KAAK,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAuB,IAAhD;AACA,UAAMiB,OAAO,GAAGlB,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAgB,IAAvC;AACA,UAAMmB,OAAO,GAAG,EAAEnB,OAAO,IAAIC,KAAb,IAAsBe,KAAtB,GAA8B,IAA9C;AAEA,WACA;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,WADL,EAEKC,OAFL,EAGKC,OAHL,CADA;AAOD;;AAzDmD","sourcesContent":["import React from 'react';\r\n\r\nimport './item-list.css';\r\nimport SwapiService from '../../services/swapi-service'\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorIndicator from '../error-indicator/error-indicator'\r\n\r\nexport default class ItemList extends React.Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = { \r\n        peopleList: [],\r\n        loading: true,\r\n        error: false\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.swapiService\r\n            .getAllPeople()\r\n            .then((peopleList)=>{\r\n                this.setState({\r\n                    peopleList,\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map(({id, name}) => {\r\n            return (\r\n                <li className=\"list-group-item\"\r\n                    key={id}\r\n                    onClick={()=>this.props.onItemSelected(id)}>\r\n                    {name}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n  render() {\r\n    \r\n    const {peopleList, loading, error} = this.state\r\n    const items = this.renderItems(peopleList)\r\n\r\n\r\n    const errorMesage = error ? <ErrorIndicator/> : null\r\n    const spinner = loading ? <Spinner/> : null\r\n    const content = !(loading || error) ? items : null\r\n\r\n    return (\r\n    <ul className=\"item-list list-group\">\r\n        {errorMesage}\r\n        {spinner}\r\n        {content}\r\n    </ul>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}