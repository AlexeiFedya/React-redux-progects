{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\sw-components\\\\item-lists.js\";\nimport React from 'react';\nimport ItemList from '../item-list/item-list';\nimport withData from '../hoc-helpers/with-data';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\nimport withChildFunction from '../hoc-helpers/with-child-function';\nimport compose from '../hoc-helpers';\n\nconst renderName = ({\n  name\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, name);\n\nconst renderModelAndName = ({\n  model,\n  name\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, name, \" (\", model, \")\");\n\nconst mapPersonMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPeople\n  };\n};\n\nconst mapPlanetMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPlanets\n  };\n};\n\nconst mapStarshipMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllStarships\n  };\n};\n\nconst PersonList = compose(withSwapiService(mapPersonMethodsToProps), withData, withChildFunction(renderName))(ItemList);\nconst PlanetList = compose(withSwapiService(mapPlanetMethodsToProps), withData, withChildFunction(renderName))(ItemList);\nconst StarshipList = compose(withSwapiService(mapStarshipMethodsToProps), withData, withChildFunction(renderModelAndName))(ItemList);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/sw-components/item-lists.js"],"names":["React","ItemList","withData","withSwapiService","withChildFunction","compose","renderName","name","renderModelAndName","model","mapPersonMethodsToProps","swapiService","getData","getAllPeople","mapPlanetMethodsToProps","getAllPlanets","mapStarshipMethodsToProps","getAllStarships","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAP,CAAjC;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAP,QAAeE,KAAf,MAA/C;;AAEA,MAAMC,uBAAuB,GAAIC,YAAD,IAAkB;AAChD,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACE;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,uBAAuB,GAAIH,YAAD,IAAkB;AAChD,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACI;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,yBAAyB,GAAIL,YAAD,IAAkB;AAClD,SAAO;AACLC,IAAAA,OAAO,EAAED,YAAY,CAACM;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,UAAU,GAAGb,OAAO,CACLF,gBAAgB,CAACO,uBAAD,CADX,EAELR,QAFK,EAGLE,iBAAiB,CAACE,UAAD,CAHZ,CAAP,CAIEL,QAJF,CAAnB;AAMA,MAAMkB,UAAU,GAAGd,OAAO,CACLF,gBAAgB,CAACW,uBAAD,CADX,EAELZ,QAFK,EAGLE,iBAAiB,CAACE,UAAD,CAHZ,CAAP,CAIEL,QAJF,CAAnB;AAMA,MAAMmB,YAAY,GAAGf,OAAO,CACLF,gBAAgB,CAACa,yBAAD,CADX,EAELd,QAFK,EAGLE,iBAAiB,CAACI,kBAAD,CAHZ,CAAP,CAIEP,QAJF,CAArB;AAMA,SACEiB,UADF,EAEEC,UAFF,EAGEC,YAHF","sourcesContent":["import React from 'react';\nimport ItemList from '../item-list/item-list';\n\nimport withData from '../hoc-helpers/with-data';\nimport withSwapiService from '../hoc-helpers/with-swapi-service';\nimport withChildFunction from '../hoc-helpers/with-child-function';\nimport compose from '../hoc-helpers';\n\n\nconst renderName = ({ name }) => <span>{name}</span>;\n\nconst renderModelAndName = ({ model, name}) => <span>{name} ({model})</span>;\n\nconst mapPersonMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllPeople\n  };\n};\n\nconst mapPlanetMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllPlanets\n  };\n};\n\nconst mapStarshipMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllStarships\n  };\n};\n\nconst PersonList = compose(\n                     withSwapiService(mapPersonMethodsToProps),\n                     withData,\n                     withChildFunction(renderName)\n                   )(ItemList);\n\nconst PlanetList = compose(\n                     withSwapiService(mapPlanetMethodsToProps),\n                     withData,\n                     withChildFunction(renderName)\n                   )(ItemList);\n\nconst StarshipList = compose(\n                       withSwapiService(mapStarshipMethodsToProps),\n                       withData,\n                       withChildFunction(renderModelAndName)\n                     )(ItemList);\n\nexport {\n  PersonList,\n  PlanetList,\n  StarshipList\n};\n"]},"metadata":{},"sourceType":"module"}