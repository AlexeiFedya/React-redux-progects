{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\random-planet\\\\random-planet.js\";\nimport React from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport './random-planet.css';\nimport Spinner from '../spinner/spinner';\nexport default class RandomPlanet extends React.Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false\n      });\n    };\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = Math.floor(Math.random() * 25) + 2;\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded);\n  }\n\n  render() {\n    const {\n      planet,\n      loading\n    } = this.state;\n    const spinner = loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(PlanetView, {\n      planet: planet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst PlanetView = ({\n  planet\n}) => {\n  const {\n    name,\n    population,\n    rotationPeriod,\n    diameter,\n    id\n  } = planet;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"planet-image\",\n    src: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Population\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, population)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Rotation Period\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, rotationPeriod)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Diameter\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, diameter)))));\n};","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/random-planet/random-planet.js"],"names":["React","SwapiService","Spinner","RandomPlanet","Component","constructor","swapiService","state","planet","loading","onPlanetLoaded","setState","updatePlanet","id","Math","floor","random","getPlanet","then","render","spinner","PlanetView","name","population","rotationPeriod","diameter"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport  SwapiService from '../../services/swapi-service'\r\nimport './random-planet.css';\r\nimport Spinner from '../spinner/spinner'\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true\r\n        \r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.updatePlanet();\r\n    }\r\n    \r\n    onPlanetLoaded = (planet)=>{\r\n        this.setState({\r\n            planet,\r\n            loading:false})\r\n    }\r\n\r\n    updatePlanet () {\r\n        const id = Math.floor(Math.random()*25) + 2;\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n    }\r\n\r\nrender() {\r\n    \r\n    const   {planet, loading} = this.state        \r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n\r\n\r\n    return (\r\n    <div className=\"random-planet jumbotron rounded\">\r\n        \r\n       <PlanetView planet={planet}/>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n\r\n    const   {name, population, rotationPeriod,\r\n                        diameter, id } = planet\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"planet-image\"\r\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n        <div>\r\n            <h4>{name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Population</span>\r\n                    <span>{population}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Rotation Period</span>\r\n                    <span>{rotationPeriod}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Diameter</span>\r\n                    <span>{diameter}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}