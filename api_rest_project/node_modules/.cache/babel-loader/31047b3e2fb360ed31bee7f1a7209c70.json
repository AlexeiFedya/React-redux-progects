{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\random-planet\\\\random-planet.js\";\nimport React from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport './random-planet.css';\nimport Spinner from '../spinner/spinner';\nexport default class RandomPlanet extends React.Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {}\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet\n      });\n    };\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = Math.floor(Math.random() * 25) + 2;\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded);\n  }\n\n  render() {\n    const {\n      planet: {\n        name,\n        population,\n        rotationPeriod,\n        diameter,\n        id\n      }\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"planet-image\",\n      src: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, population)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Rotation Period\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, rotationPeriod)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, diameter)))));\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/random-planet/random-planet.js"],"names":["React","SwapiService","Spinner","RandomPlanet","Component","constructor","swapiService","state","planet","onPlanetLoaded","setState","updatePlanet","id","Math","floor","random","getPlanet","then","render","name","population","rotationPeriod","diameter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,YAAR,MAA0B,8BAA1B;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,eAAe,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAStDC,EAAAA,WAAW,GAAE;AACT;AADS,SAPbC,YAOa,GAPE,IAAIL,YAAJ,EAOF;AAAA,SALbM,KAKa,GALL;AACJC,MAAAA,MAAM,EAAE;AADJ,KAKK;;AAAA,SAKbC,cALa,GAKKD,MAAD,IAAU;AACvB,WAAKE,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACH,KAPY;;AAET,SAAKG,YAAL;AACH;;AAMDA,EAAAA,YAAY,GAAI;AACZ,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,IAA+B,CAA1C;AACA,SAAKT,YAAL,CACKU,SADL,CACeJ,EADf,EAEKK,IAFL,CAEU,KAAKR,cAFf;AAGH;;AAELS,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACV,MAAAA,MAAM,EAAE;AAACW,QAAAA,IAAD;AAAOC,QAAAA,UAAP;AAAmBC,QAAAA,cAAnB;AAAmCC,QAAAA,QAAnC;AAA6CV,QAAAA;AAA7C;AAAT,QAA6D,KAAKL,KAAxE;AAGA,WACA;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AACI,MAAA,GAAG,EAAG,uDAAsDK,EAAG,MADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKO,IAAL,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,UAAP,CAFJ,CADJ,EAKI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,cAAP,CAFJ,CALJ,EASI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,QAAP,CAFJ,CATJ,CAFJ,CAHJ,CADA;AAwBD;;AAtDuD","sourcesContent":["import React from 'react';\r\nimport  SwapiService from '../../services/swapi-service'\r\nimport './random-planet.css';\r\nimport Spinner from '../spinner/spinner'\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        planet: {}\r\n        \r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.updatePlanet();\r\n    }\r\n    \r\n    onPlanetLoaded = (planet)=>{\r\n        this.setState({planet})\r\n    }\r\n\r\n    updatePlanet () {\r\n        const id = Math.floor(Math.random()*25) + 2;\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n    }\r\n\r\nrender() {\r\n    \r\n    const {planet: {name, population, rotationPeriod, diameter, id}} = this.state\r\n    \r\n    \r\n    return (\r\n    <div className=\"random-planet jumbotron rounded\">\r\n        <img className=\"planet-image\"\r\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n        <div>\r\n            <h4>{name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Population</span>\r\n                    <span>{population}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Rotation Period</span>\r\n                    <span>{rotationPeriod}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Diameter</span>\r\n                    <span>{diameter}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}