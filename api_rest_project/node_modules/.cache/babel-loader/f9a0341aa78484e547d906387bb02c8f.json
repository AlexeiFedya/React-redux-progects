{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\random-planet\\\\random-planet.js\";\nimport React from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport './random-planet.css';\nexport default class RandomPlanet extends React.Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      id: null,\n      name: null,\n      population: null,\n      rotationPeriod: null,\n      diameter: null\n    };\n\n    this.onPlanetLoaded = planet => {\n      this;\n    };\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = Math.floor(Math.random() * 25) + 2;\n    this.swapiService.getPlanet(id).then(planet => {\n      this.setState({\n        id,\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      population,\n      rotationPeriod,\n      diameter,\n      id\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"planet-image\",\n      src: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, population)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Rotation Period\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, rotationPeriod)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, diameter)))));\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/random-planet/random-planet.js"],"names":["React","SwapiService","RandomPlanet","Component","constructor","swapiService","state","id","name","population","rotationPeriod","diameter","onPlanetLoaded","planet","updatePlanet","Math","floor","random","getPlanet","then","setState","rotation_period","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,YAAR,MAA0B,8BAA1B;AACA,OAAO,qBAAP;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAatDC,EAAAA,WAAW,GAAE;AACT;AADS,SAXbC,YAWa,GAXE,IAAIJ,YAAJ,EAWF;AAAA,SATbK,KASa,GATL;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,UAAU,EAAE,IAHR;AAIJC,MAAAA,cAAc,EAAE,IAJZ;AAKJC,MAAAA,QAAQ,EAAE;AALN,KASK;;AAAA,SAKbC,cALa,GAKKC,MAAD,IAAU;AACvB;AACH,KAPY;;AAET,SAAKC,YAAL;AACH;;AAMDA,EAAAA,YAAY,GAAI;AACZ,UAAMP,EAAE,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,IAA+B,CAA1C;AACA,SAAKZ,YAAL,CACKa,SADL,CACeX,EADf,EAEKY,IAFL,CAEWN,MAAD,IAAW;AACb,WAAKO,QAAL,CAAc;AACVb,QAAAA,EADU;AAEVC,QAAAA,IAAI,EAAEK,MAAM,CAACL,IAFH;AAGVC,QAAAA,UAAU,EAAEI,MAAM,CAACJ,UAHT;AAIVC,QAAAA,cAAc,EAAEG,MAAM,CAACQ,eAJb;AAKVV,QAAAA,QAAQ,EAAEE,MAAM,CAACF;AALP,OAAd;AAOH,KAVL;AAWH;;AAEHW,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACd,MAAAA,IAAD;AAAOC,MAAAA,UAAP;AAAmBC,MAAAA,cAAnB;AAAmCC,MAAAA,QAAnC;AAA6CJ,MAAAA;AAA7C,QAAmD,KAAKD,KAA9D;AAEA,WACA;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AACI,MAAA,GAAG,EAAG,uDAAsDC,EAAG,MADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,UAAP,CAFJ,CADJ,EAKI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,cAAP,CAFJ,CALJ,EASI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,QAAP,CAFJ,CATJ,CAFJ,CAHJ,CADA;AAwBD;;AAjEuD","sourcesContent":["import React from 'react';\r\nimport  SwapiService from '../../services/swapi-service'\r\nimport './random-planet.css';\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        id: null,\r\n        name: null,\r\n        population: null,\r\n        rotationPeriod: null,\r\n        diameter: null\r\n        \r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.updatePlanet();\r\n    }\r\n    \r\n    onPlanetLoaded = (planet)=>{\r\n        this\r\n    }\r\n\r\n    updatePlanet () {\r\n        const id = Math.floor(Math.random()*25) + 2;\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then((planet)=> {\r\n                this.setState({\r\n                    id,\r\n                    name: planet.name,\r\n                    population: planet.population,\r\n                    rotationPeriod: planet.rotation_period,\r\n                    diameter: planet.diameter\r\n                })\r\n            })\r\n    }\r\n\r\n  render() {\r\n    \r\n    const {name, population, rotationPeriod, diameter, id} = this.state\r\n\r\n    return (\r\n    <div className=\"random-planet jumbotron rounded\">\r\n        <img className=\"planet-image\"\r\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n        <div>\r\n            <h4>{name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Population</span>\r\n                    <span>{population}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Rotation Period</span>\r\n                    <span>{rotationPeriod}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Diameter</span>\r\n                    <span>{diameter}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}