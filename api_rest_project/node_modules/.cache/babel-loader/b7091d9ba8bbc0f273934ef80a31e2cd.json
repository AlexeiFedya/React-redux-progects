{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\api_rest_project\\\\src\\\\components\\\\App\\\\app.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport RandomPlanet from '../random-planet/random-planet';\nimport ErrorBoundry from '../error-boundry/error-boundry';\nimport SwapiService from '../../services/swapi-service';\nimport DummySwapiService from '../../services/dummy-swapi-service';\nimport PeoplePage from '../pages/people-page';\nimport PlanetsPage from '../pages/planets-page';\nimport StarshipsPage from '../pages/starships-page';\nimport LoginPage from '../pages/login-page';\nimport SecretPage from '../pages/secret-page';\nimport { SwapiServiceProvider } from '../swapi-service-context/swapi-service-context';\nimport './app.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport StarshipDetails from '../sw-components/starship-details';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      swapiService: new SwapiService(),\n      isLoggedIn: false\n    };\n\n    this.onLogin = () => {\n      this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    this.onServiceChange = () => {\n      this.setState(({\n        swapiService\n      }) => {\n        const Service = swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\n        return {\n          swapiService: new Service()\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      isLoggedIn\n    } = this.state;\n    return React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(SwapiServiceProvider, {\n      value: this.state.swapiService,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stardb-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onServiceChange: this.onServiceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(RandomPlanet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Welcome to StarDB\"),\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/people/:id?\",\n      component: PeoplePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/planets\",\n      component: PlanetsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/starships\",\n      exact: true,\n      component: StarshipsPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/starships/:id\",\n      render: ({\n        match\n      }) => {\n        const {\n          id\n        } = match.params;\n        return React.createElement(StarshipDetails, {\n          itemId: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginPage, {\n        isLoggedIn: isLoggedIn,\n        onLogin: this.onLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/secret\",\n      render: () => React.createElement(SecretPage, {\n        isLoggedIn: isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Page not found\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/components/App/app.js"],"names":["React","Component","Header","RandomPlanet","ErrorBoundry","SwapiService","DummySwapiService","PeoplePage","PlanetsPage","StarshipsPage","LoginPage","SecretPage","SwapiServiceProvider","BrowserRouter","Router","Switch","Route","Redirect","StarshipDetails","App","state","swapiService","isLoggedIn","onLogin","setState","onServiceChange","Service","render","match","id","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Header from '../header/header';\r\nimport RandomPlanet from '../random-planet/random-planet';\r\nimport ErrorBoundry from '../error-boundry/error-boundry';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport DummySwapiService from '../../services/dummy-swapi-service';\r\n\r\nimport PeoplePage from '../pages/people-page';\r\nimport PlanetsPage from '../pages/planets-page';\r\nimport StarshipsPage from '../pages/starships-page';\r\nimport LoginPage from '../pages/login-page';\r\nimport SecretPage from '../pages/secret-page';\r\n\r\n\r\nimport { SwapiServiceProvider } from '../swapi-service-context/swapi-service-context';\r\n\r\nimport './app.css';\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport StarshipDetails from '../sw-components/starship-details';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    swapiService: new SwapiService(),\r\n    isLoggedIn: false\r\n  };\r\n\r\n  onLogin = () => {\r\n    this.setState({\r\n      isLoggedIn: true\r\n    });\r\n  };\r\n\r\n  onServiceChange = () => {\r\n    this.setState(({ swapiService }) => {\r\n      const Service = swapiService instanceof SwapiService ?\r\n                        DummySwapiService : SwapiService;\r\n      return {\r\n        swapiService: new Service()\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <ErrorBoundry>\r\n        <SwapiServiceProvider value={this.state.swapiService} >\r\n          <Router>\r\n            <div className=\"stardb-app\">\r\n              <Header onServiceChange={this.onServiceChange} />\r\n              <RandomPlanet />\r\n\r\n              <Switch>\r\n                <Route path=\"/\"\r\n                       render={() => <h2>Welcome to StarDB</h2>}\r\n                       exact />\r\n                <Route path=\"/people/:id?\" component={PeoplePage} />\r\n                <Route path=\"/planets\" component={PlanetsPage} />\r\n                <Route path=\"/starships\" exact component={StarshipsPage} />\r\n                <Route path=\"/starships/:id\"\r\n                       render={({ match }) => {\r\n                         const { id } = match.params;\r\n                         return <StarshipDetails itemId={id} />\r\n                       }}/>\r\n\r\n                <Route\r\n                  path=\"/login\"\r\n                  render={() => (\r\n                    <LoginPage\r\n                      isLoggedIn={isLoggedIn}\r\n                      onLogin={this.onLogin}/>\r\n                  )}/>\r\n\r\n                <Route\r\n                  path=\"/secret\"\r\n                  render={() => (\r\n                    <SecretPage isLoggedIn={isLoggedIn} />\r\n                  )}/>\r\n\r\n                <Route render={() => <h2>Page not found</h2>} />\r\n              </Switch>\r\n\r\n            </div>\r\n          </Router>\r\n        </SwapiServiceProvider>\r\n      </ErrorBoundry>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}