{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n  }\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getAllPeople","res","getResource","results","map","_transformPerson","getPerson","id","person","_transformPlanet","planet","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","url","fetch","ok","Error","status","json","getAllPlanets","getPlanet","getAllStarships","getStarship","item","idRegExp","match"],"mappings":"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","sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.co/api';\r\n\r\n    async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`)\r\n    }\r\n    return await res.json();\r\n    }\r\n\r\n    getAllPeople = async ()=> {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    getPerson = async (id)=> {\r\n    const person = await this.getResource(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n    }\r\n\r\n    async getAllPlanets() {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    async getPlanet(id) {\r\n    const planet = await this.getResource(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n    }\r\n\r\n    async getAllStarships() {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n    }\r\n\r\n    async getStarship(id) {\r\n    const starship = this.getResource(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n    }\r\n\r\n    _extractId(item) {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformPlanet= (planet) => {\r\n    return {\r\n        id: this._extractId(planet),\r\n        name: planet.name,\r\n        population: planet.population,\r\n        rotationPeriod: planet.rotation_period,\r\n        diameter: planet.diameter\r\n    };\r\n    }\r\n\r\n    _transformStarship = (starship) => {\r\n    return {\r\n        id: this._extractId(starship),\r\n        name: starship.name,\r\n        model: starship.model,\r\n        manufacturer: starship.manufacturer,\r\n        costInCredits: starship.costInCredits,\r\n        length: starship.length,\r\n        crew: starship.crew,\r\n        passengers: starship.passengers,\r\n        cargoCapacity: starship.cargoCapacity\r\n    }\r\n    }\r\n\r\n    _transformPerson = (person) =>{\r\n    return {\r\n        id: this._extractId(person),\r\n        name: person.name,\r\n        gender: person.gender,\r\n        birthYear: person.birthYear,\r\n        eyeColor: person.eyeColor\r\n    }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}