{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResource(`/people/`);\n    return res.results.map(this._transformPerson);\n  }\n\n  async getPerson(id) {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResource(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResource(`/starships/`);\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet(planet) {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformStarship(starship) {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    };\n  }\n\n  _transformPerson(person) {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birthYear,\n      eyeColor: person.eyeColor\n    };\n  }\n\n}","map":{"version":3,"sources":["F:/React-redux-progects/api_rest_project/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.co/api';\r\n  \r\n    async getResource(url) {\r\n      const res = await fetch(`${this._apiBase}${url}`);\r\n  \r\n      if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}` +\r\n          `, received ${res.status}`)\r\n      }\r\n      return await res.json();\r\n    }\r\n  \r\n    async getAllPeople() {\r\n      const res = await this.getResource(`/people/`);\r\n      return res.results.map(this._transformPerson);\r\n    }\r\n  \r\n    async getPerson(id) {\r\n      const person = await this.getResource(`/people/${id}/`);\r\n      return this._transformPerson(person);\r\n    }\r\n  \r\n    async getAllPlanets() {\r\n      const res = await this.getResource(`/planets/`);\r\n      return res.results.map(this._transformPlanet);\r\n    }\r\n  \r\n    async getPlanet(id) {\r\n      const planet = await this.getResource(`/planets/${id}/`);\r\n      return this._transformPlanet(planet);\r\n    }\r\n  \r\n    async getAllStarships() {\r\n      const res = await this.getResource(`/starships/`);\r\n      return res.results.map(this._transformStarship);\r\n    }\r\n  \r\n    async getStarship(id) {\r\n      const starship = this.getResource(`/starships/${id}/`);\r\n      return this._transformStarship(starship);\r\n    }\r\n  \r\n    _extractId(item) {\r\n      const idRegExp = /\\/([0-9]*)\\/$/;\r\n      return item.url.match(idRegExp)[1];\r\n    }\r\n  \r\n    _transformPlanet(planet) {\r\n      return {\r\n        id: this._extractId(planet),\r\n        name: planet.name,\r\n        population: planet.population,\r\n        rotationPeriod: planet.rotation_period,\r\n        diameter: planet.diameter\r\n      };\r\n    }\r\n  \r\n    _transformStarship(starship) {\r\n      return {\r\n        id: this._extractId(starship),\r\n        name: starship.name,\r\n        model: starship.model,\r\n        manufacturer: starship.manufacturer,\r\n        costInCredits: starship.costInCredits,\r\n        length: starship.length,\r\n        crew: starship.crew,\r\n        passengers: starship.passengers,\r\n        cargoCapacity: starship.cargoCapacity\r\n      }\r\n    }\r\n  \r\n    _transformPerson(person) {\r\n return {\r\n        id: this._extractId(person),\r\n        name: person.name,\r\n        gender: person.gender,\r\n        birthYear: person.birthYear,\r\n        eyeColor: person.eyeColor\r\n    }\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}