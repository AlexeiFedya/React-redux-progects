{"ast":null,"code":"import updateBookList from './bookList';\nimport up from './shoppingCart';\n\nconst reducer = (state, action) => {\n  console.log(action.type);\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action)\n  };\n};\n\nexport default reducer; // case 'FETCH_BOOKS_REQUEST':\n//     return {\n//         ...state, // copy this current state and change other  \n//         books: [],\n//         loading: true,\n//         error: null\n//     };\n// case 'FETCH_BOOKS_SUCCESS':\n//     return {\n//         ...state,\n//         books: action.payload,\n//         loading: false,\n//         error: null\n//     };\n// case 'FETCH_BOOKS_FAILURE':\n//     return {\n//         ...state,\n//         books: [],\n//         loading: false,\n//         error: action.payload\n//     }  \n// case'BOOK_ADDED_TO_CART':\n// return  (\n//     updateOrder(state, action.payload, 1)\n// )\n// const bookId = action.payload;\n// const book = state.books.find((book) => book.id === bookId);\n// const itemIndex = state.cartItems.findIndex((book) => book.id === bookId)\n// const item = state.cartItems[itemIndex]\n// const newItem =  updateCartItem (book, item)\n//     return {\n//         ...state,\n//         cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\n//     }\n// case'BOOK_REMOVED_FROM_CART':\n// return (\n//     updateOrder(state, action.payload, -1)\n// )\n// case'ALL_BOOKS_REMOVED_FROM_CART':\n// const item = state.cartItems.find((book) => book.id === action.payload)\n// return (\n//     updateOrder(state, action.payload, -item.count)\n// )","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/reducers/reducer.js"],"names":["updateBookList","up","reducer","state","action","console","log","type","bookList","shoppingCart","updateShoppingCart"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,YAA3B;AACA,OAAOC,EAAP,MAAe,gBAAf;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AAEhCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAER,cAAc,CAACG,KAAD,EAAQC,MAAR,CADrB;AAEHK,IAAAA,YAAY,EAAEC,kBAAkB,CAACP,KAAD,EAAQC,MAAR;AAF7B,GAAP;AAIH,CARD;;AAUA,eAAeF,OAAf,C,CACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA","sourcesContent":["import updateBookList from './bookList'\r\nimport up from './shoppingCart'\r\n\r\n\r\nconst reducer = (state , action) => {\r\n\r\n    console.log(action.type)\r\n\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer;            \r\n        // case 'FETCH_BOOKS_REQUEST':\r\n        //     return {\r\n        //         ...state, // copy this current state and change other  \r\n        //         books: [],\r\n        //         loading: true,\r\n        //         error: null\r\n        //     };\r\n        // case 'FETCH_BOOKS_SUCCESS':\r\n        //     return {\r\n        //         ...state,\r\n        //         books: action.payload,\r\n        //         loading: false,\r\n        //         error: null\r\n        //     };\r\n\r\n        // case 'FETCH_BOOKS_FAILURE':\r\n        //     return {\r\n        //         ...state,\r\n        //         books: [],\r\n        //         loading: false,\r\n        //         error: action.payload\r\n        //     }  \r\n\r\n        // case'BOOK_ADDED_TO_CART':\r\n        // return  (\r\n        //     updateOrder(state, action.payload, 1)\r\n        // )\r\n        \r\n            // const bookId = action.payload;\r\n            // const book = state.books.find((book) => book.id === bookId);\r\n            // const itemIndex = state.cartItems.findIndex((book) => book.id === bookId)\r\n            // const item = state.cartItems[itemIndex]\r\n            \r\n            // const newItem =  updateCartItem (book, item)\r\n            \r\n            //     return {\r\n            //         ...state,\r\n            //         cartItems: updateCartItems(state.cartItems, newItem, itemIndex)\r\n            //     }\r\n\r\n        // case'BOOK_REMOVED_FROM_CART':\r\n        // return (\r\n        //     updateOrder(state, action.payload, -1)\r\n        // )\r\n\r\n        \r\n        // case'ALL_BOOKS_REMOVED_FROM_CART':\r\n        // const item = state.cartItems.find((book) => book.id === action.payload)\r\n        // return (\r\n        //     updateOrder(state, action.payload, -item.count)\r\n        // )\r\n"]},"metadata":{},"sourceType":"module"}