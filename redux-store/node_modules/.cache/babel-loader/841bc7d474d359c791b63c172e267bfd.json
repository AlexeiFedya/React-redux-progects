{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItem = (book, item = {}) => {\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0\n  } = item;\n  return {\n    id,\n    title,\n    count: count + 1,\n    total: total + book.price\n  }; // if (item) {\n  //     return {\n  //         ...item,\n  //         count: item.count + 1,\n  //         total: item.total + book.price\n  //     }\n  // } else {\n  //     return {\n  //         id: book.id,\n  //         title: book.title,\n  //         count: 1,\n  //         total: book.price\n  //     }\n  // }\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        // copy this current state and change other  \n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(book => book.id === bookId);\n      const item = state.cartItems[itemIndex];\n      const newItem = updateCartItem(book, item);\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, item, itemIndex)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/reducers/reducer.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","slice","updateCartItem","book","id","count","title","total","price","reducer","state","action","console","log","type","payload","bookId","find","itemIndex","findIndex","newItem"],"mappings":"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","sourcesContent":["const initialState = { \r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    orderTotal: 220\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n    if (idx === -1){\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0,idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ]\r\n}\r\n\r\nconst updateCartItem = (book, item = {}) => {\r\n\r\n    const {id = book.id, \r\n           count = 0,\r\n           title = book.title,\r\n           total = 0} = item;\r\n           \r\n            return {\r\n                id,\r\n                title,\r\n                count: count + 1,\r\n                total: total + book.price\r\n            }\r\n\r\n            // if (item) {\r\n            //     return {\r\n            //         ...item,\r\n            //         count: item.count + 1,\r\n            //         total: item.total + book.price\r\n            //     }\r\n            // } else {\r\n            //     return {\r\n            //         id: book.id,\r\n            //         title: book.title,\r\n            //         count: 1,\r\n            //         total: book.price\r\n            //     }\r\n            // }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state, // copy this current state and change other  \r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }  \r\n\r\n        case'BOOK_ADDED_TO_CART':\r\n            const bookId = action.payload;\r\n            const book = state.books.find((book) => book.id === bookId);\r\n            const itemIndex = state.cartItems.findIndex((book) => book.id === bookId)\r\n            const item = state.cartItems[itemIndex]\r\n            \r\n            const newItem =  updateCartItem (book, item)\r\n            \r\n                return {\r\n                    ...state,\r\n                    cartItems: updateCartItems(state.cartItems, item, itemIndex)\r\n                }\r\n            \r\n        \r\n\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}