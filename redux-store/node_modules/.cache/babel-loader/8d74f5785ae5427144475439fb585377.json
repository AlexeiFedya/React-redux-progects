{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BookListItem from '../book-list-item/book-list-item';\nimport withBookstoreService from '../hoc/with-bookstore-service';\nimport './book-list.css';\n\nclass BookList extends React.Component {\n  componentDidMount() {\n    //1 receive data (получить данные)\n    const {\n      bookstoreService\n    } = this.props;\n    const data = bookstoreService.getBooks();\n    console.log(data); // 2 передать действия в стор\n  }\n\n  render() {\n    const {\n      books\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, books.map(book => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: book.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BookListItem, {\n        book: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    booksLoaded: newBooks => {\n      dispatch({\n        type: 'BOOKS_LOADED',\n        payload: newBooks\n      });\n    }\n  };\n};\n\nexport default withBookstoreService()(connect(mapStateToProps)(BookList));","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/components/book-list/book-list.js"],"names":["React","connect","BookListItem","withBookstoreService","BookList","Component","componentDidMount","bookstoreService","props","data","getBooks","console","log","render","books","map","book","id","mapStateToProps","state","mapDispatchToProps","dispatch","booksLoaded","newBooks","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AAEA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAEpCC,EAAAA,iBAAiB,GAAI;AACjB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKC,KAAjC;AACA,UAAMC,IAAI,GAAGF,gBAAgB,CAACG,QAAjB,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJiB,CAMjB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKN,KAArB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQM,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,0BACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,CAFR,CADJ;AAaH;;AA5BmC;;AA+BxC,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,WAAW,EAAGC,QAAD,IAAc;AACvBF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CAAR;AAIH;AANE,GAAP;AAQH,CATD;;AAWA,eAAepB,oBAAoB,GAAGF,OAAO,CAACiB,eAAD,CAAP,CAA0Bd,QAA1B,CAAH,CAAnC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport BookListItem from '../book-list-item/book-list-item'\r\nimport withBookstoreService from '../hoc/with-bookstore-service'\r\n\r\nimport './book-list.css'\r\n\r\nclass BookList  extends React.Component {\r\n\r\n    componentDidMount () {\r\n        //1 receive data (получить данные)\r\n        const { bookstoreService} = this.props\r\n        const data = bookstoreService.getBooks()\r\n        console.log(data)\r\n\r\n        // 2 передать действия в стор\r\n    }\r\n\r\n    render() {\r\n\r\n        const {books} = this.props\r\n\r\n        return(\r\n            <ul>\r\n                {\r\n                    books.map((book) => {\r\n                        return (\r\n                            <li key={book.id}>\r\n                                <BookListItem book={book} />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.books\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        booksLoaded: (newBooks) => {\r\n            dispatch({\r\n                type: 'BOOKS_LOADED',\r\n                payload: newBooks\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default withBookstoreService()(connect(mapStateToProps) (BookList));"]},"metadata":{},"sourceType":"module"}