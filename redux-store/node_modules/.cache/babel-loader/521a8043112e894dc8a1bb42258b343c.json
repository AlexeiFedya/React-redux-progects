{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItme = () => {\n  let newItem;\n\n  if (item) {\n    newItem = { ...item,\n      count: item.count + 1,\n      total: item.total + book.price\n    };\n  } else {\n    newItem = {\n      id: book.id,\n      title: book.title,\n      count: 1,\n      total: book.price\n    };\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        // copy this current state and change other  \n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(book => book.id === bookId);\n      const item = state.cartItems[itemIndex];\n      let newItem;\n\n      if (item) {\n        newItem = { ...item,\n          count: item.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          title: book.title,\n          count: 1,\n          total: book.price\n        };\n      }\n\n      return { ...state,\n        cartItems: updateCartItems(state.cartItems, item, itemIndex)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/reducers/reducer.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","slice","updateCartItme","newItem","count","total","book","price","id","title","reducer","state","action","console","log","type","payload","bookId","find","itemIndex","findIndex"],"mappings":"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","sourcesContent":["const initialState = { \r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    orderTotal: 220\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n    if (idx === -1){\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0,idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ]\r\n}\r\n\r\nconst updateCartItme = () => {\r\n    let newItem;\r\n\r\n            if (item) {\r\n                newItem = {\r\n                    ...item,\r\n                    count: item.count + 1,\r\n                    total: item.total + book.price\r\n                }\r\n            } else {\r\n                newItem = {\r\n                    id: book.id,\r\n                    title: book.title,\r\n                    count: 1,\r\n                    total: book.price\r\n                }\r\n            }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state, // copy this current state and change other  \r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }  \r\n\r\n        case'BOOK_ADDED_TO_CART':\r\n            const bookId = action.payload;\r\n            const book = state.books.find((book) => book.id === bookId);\r\n            const itemIndex = state.cartItems.findIndex((book) => book.id === bookId)\r\n            const item = state.cartItems[itemIndex]\r\n            \r\n            let newItem;\r\n\r\n            if (item) {\r\n                newItem = {\r\n                    ...item,\r\n                    count: item.count + 1,\r\n                    total: item.total + book.price\r\n                }\r\n            } else {\r\n                newItem = {\r\n                    id: book.id,\r\n                    title: book.title,\r\n                    count: 1,\r\n                    total: book.price\r\n                }\r\n            }\r\n            \r\n                return {\r\n                    ...state,\r\n                    cartItems: updateCartItems(state.cartItems, item, itemIndex)\r\n                }\r\n            \r\n        \r\n\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}