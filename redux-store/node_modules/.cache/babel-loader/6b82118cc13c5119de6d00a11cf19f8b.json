{"ast":null,"code":"var _jsxFileName = \"F:\\\\React-redux-progects\\\\redux-store\\\\src\\\\components\\\\book-list\\\\book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BookListItem from '../book-list-item/book-list-item';\nimport withBookstoreService from '../hoc/with-bookstore-service';\nimport { booksLoaded } from '../../actions/actions';\nimport compose from '../../utils/compose';\nimport './book-list.css';\n\nclass BookList extends React.Component {\n  componentDidMount() {\n    //1 receive data (получить данные)\n    // const { bookstoreService} = this.props\n    const data = this.props.bookstoreService.getBooks();\n    console.log(data); // 2 передать действия в стор\n\n    this.props.booksLoaded(data);\n  }\n\n  render() {\n    const {\n      books\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, books.map(book => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: book.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BookListItem, {\n        book: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books\n  };\n};\n\nconst mapDispatchToProps = {\n  // redux обернет booksLoaded в bindActionCreators и как только наш компонент будет вызывыть функция booksLoaded будет не только создаваться новое дейстие но оно будет сразу передоваться в dispatch и сразу же попадать в наш стор\n  booksLoaded\n}; // const mapDispatchToProps = (dispatch) => {\n//     return (\n//         bindActionCreators ({\n//             booksLoaded\n//         }, dispatch)\n//     )\n// }\n// export default withBookstoreService()(\n//     connect(mapStateToProps, mapDispatchToProps) (BookList));\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/components/book-list/book-list.js"],"names":["React","connect","BookListItem","withBookstoreService","booksLoaded","compose","BookList","Component","componentDidMount","data","props","bookstoreService","getBooks","console","log","render","books","map","book","id","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAEpCC,EAAAA,iBAAiB,GAAI;AACjB;AACA;AACA,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,gBAAX,CAA4BC,QAA5B,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJiB,CAMjB;;AACA,SAAKC,KAAL,CAAWN,WAAX,CAAuBK,IAAvB;AACH;;AAEDM,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKN,KAArB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQM,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAChB,0BACI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,CAFR,CADJ;AAaH;;AA7BmC;;AAgCxC,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMM,kBAAkB,GAAG;AAAE;AACzBlB,EAAAA;AADuB,CAA3B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,eAAeC,OAAO,CAClBF,oBAAoB,EADF,EAElBF,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAFW,CAAP,CAGRhB,QAHQ,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport BookListItem from '../book-list-item/book-list-item'\r\nimport withBookstoreService from '../hoc/with-bookstore-service'\r\nimport {booksLoaded} from '../../actions/actions'\r\nimport compose from '../../utils/compose'\r\n\r\nimport './book-list.css'\r\n\r\nclass BookList  extends React.Component {\r\n\r\n    componentDidMount () {\r\n        //1 receive data (получить данные)\r\n        // const { bookstoreService} = this.props\r\n        const data = this.props.bookstoreService.getBooks()\r\n        console.log(data)\r\n\r\n        // 2 передать действия в стор\r\n        this.props.booksLoaded(data);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {books} = this.props\r\n\r\n        return(\r\n            <ul>\r\n                {\r\n                    books.map((book) => {\r\n                        return (\r\n                            <li key={book.id}>\r\n                                <BookListItem book={book} />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.books\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { // redux обернет booksLoaded в bindActionCreators и как только наш компонент будет вызывыть функция booksLoaded будет не только создаваться новое дейстие но оно будет сразу передоваться в dispatch и сразу же попадать в наш стор\r\n    booksLoaded\r\n}\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return (\r\n//         bindActionCreators ({\r\n//             booksLoaded\r\n//         }, dispatch)\r\n//     )\r\n// }\r\n\r\n// export default withBookstoreService()(\r\n//     connect(mapStateToProps, mapDispatchToProps) (BookList));\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n    ) (BookList);"]},"metadata":{},"sourceType":"module"}