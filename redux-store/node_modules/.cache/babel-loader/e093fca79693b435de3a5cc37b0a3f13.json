{"ast":null,"code":"const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 220\n};\n\nconst updateCartItems = (cartItems, item, idx) => {\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return { ...state,\n        // copy this current state and change other  \n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return { ...state,\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return { ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'BOOK_ADDED_TO_CART':\n      const bookId = action.payload;\n      const book = state.books.find(book => book.id === bookId);\n      const itemIndex = state.cartItems.findIndex(book => book.id === bookId);\n      const item = state.cartItems[itemIndex];\n      let newItem;\n\n      if (item) {\n        newItem = { ...item,\n          count: item.count + 1,\n          total: item.total + book.price\n        };\n      } else {\n        newItem = {\n          id: book.id,\n          title: book.title,\n          count: 1,\n          total: book.price\n        };\n      }\n\n      if (itemIndex < 0) {\n        return { ...state,\n          cartItems: [...state.cartItems, newItem]\n        };\n      } else {\n        return { ...state,\n          cartItems: updateCartItems(state)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/React-redux-progects/redux-store/src/reducers/reducer.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","item","idx","slice","reducer","state","action","console","log","type","payload","bookId","book","find","id","itemIndex","findIndex","newItem","count","total","price","title"],"mappings":"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","sourcesContent":["const initialState = { \r\n    books: [],\r\n    loading: true,\r\n    error: null,\r\n    cartItems: [],\r\n    orderTotal: 220\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n    if (idx === -1){\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0,idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state, // copy this current state and change other  \r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }  \r\n\r\n        case'BOOK_ADDED_TO_CART':\r\n            const bookId = action.payload;\r\n            const book = state.books.find((book) => book.id === bookId);\r\n            const itemIndex = state.cartItems.findIndex((book) => book.id === bookId)\r\n            const item = state.cartItems[itemIndex]\r\n            \r\n            let newItem;\r\n\r\n            if (item) {\r\n                newItem = {\r\n                    ...item,\r\n                    count: item.count + 1,\r\n                    total: item.total + book.price\r\n                }\r\n            } else {\r\n                newItem = {\r\n                    id: book.id,\r\n                    title: book.title,\r\n                    count: 1,\r\n                    total: book.price\r\n                }\r\n            }\r\n            \r\n            if(itemIndex < 0){\r\n                return {\r\n                    ...state,\r\n                    cartItems: [\r\n                        ...state.cartItems,\r\n                        newItem\r\n                    ]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: updateCartItems(state)\r\n                }\r\n            }\r\n        \r\n\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}